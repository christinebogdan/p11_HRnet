{"version":3,"sources":["modules/DatePickerInput.js"],"names":["DatePickerInput","props","elmt","React","useRef","id","useEffect","$","current","datetimepicker","timepicker","format","onChangeDateTime","dp","$input","onChange","target","value","val","type","ref","readOnly"],"mappings":"wGAAA,0EAmCeA,UA1Bf,SAAyBC,GACvB,IAAMC,EAAOC,IAAMC,SACbC,EAAKJ,EAAMI,GAkBjB,OAZAC,qBAAU,WACMC,IAAEL,EAAKM,SACfC,eAAe,CACnBC,YAAY,EACZC,OAAQ,QACRC,iBAAkB,SAAUC,EAAIC,GAE9Bb,EAAMc,SAAS,CAAEC,OAAQ,CAAEX,GAAIA,EAAIY,MAAOH,EAAOI,eAOrD,aADA,CACC,IAAD,CAAOb,GAAIJ,EAAMI,GAAIc,KAAK,OAAOC,IAAKlB,EAAMe,MAAOhB,EAAMgB,MAAOI,UAAQ","file":"static/js/5.2ed99ed2.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\nimport { Input } from \"../styles/home\";\nimport $ from \"jquery\";\n// why import the below as is?\nimport \"jquery-datetimepicker\";\n// why do I have to explicitely import this?\n// how do I know what to import?\nimport \"jquery-datetimepicker/build/jquery.datetimepicker.min.css\";\n\nfunction DatePickerInput(props) {\n  const elmt = React.useRef();\n  const id = props.id;\n\n  /** After component has mounted, jQuery plugin updates input field with datepicker functionality.\n   * OnChange method is passed as prop into module.\n   * Object with target.id and target.value values passed in as argument to replace missing event object.\n   */\n  useEffect(() => {\n    const $elmt = $(elmt.current);\n    $elmt.datetimepicker({\n      timepicker: false,\n      format: \"m/d/Y\",\n      onChangeDateTime: function (dp, $input) {\n        // const e = { target: { id: id, value: $input.val() } };\n        props.onChange({ target: { id: id, value: $input.val() } });\n      },\n    });\n  });\n\n  return (\n    // wieso funktioniert das hier mit readOnly? Nutzer kann trotzdem noch Datum ver√§ndern.\n    <Input id={props.id} type=\"text\" ref={elmt} value={props.value} readOnly />\n  );\n}\n\nexport default DatePickerInput;\n"],"sourceRoot":""}